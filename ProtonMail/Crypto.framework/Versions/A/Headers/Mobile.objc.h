// Objective-C API for talking to github.com/ProtonMail/gopenpgp/mobile Go package.
//   gobind -lang=objc github.com/ProtonMail/gopenpgp/mobile
//
// File is generated by gobind. Do not edit.

#ifndef __Mobile_H__
#define __Mobile_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"

#include "Crypto.objc.h"

@class MobileBytes;
@class MobileExplicitVerifyMessage;

@interface MobileBytes : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)init:(NSData* _Nullable)elements;
- (NSData* _Nullable)getElements;
@end

@interface MobileExplicitVerifyMessage : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) CryptoPlainMessage* _Nullable message;
@property (nonatomic) CryptoSignatureVerificationError* _Nullable signatureVerificationError;
@end

/**
 * DecryptAttachment takes a PGPSplitMessage, containing a session key packet and symmetrically encrypted data
and returns a decrypted PlainMessage
Specifically designed for attachments rather than text messages.
 */
FOUNDATION_EXPORT CryptoPlainMessage* _Nullable MobileDecryptAttachment(NSData* _Nullable keyPacket, NSData* _Nullable dataPacket, CryptoKeyRing* _Nullable keyRing, NSError* _Nullable* _Nullable error);

/**
 * DecryptVerifyMessageArmored decrypts an armored PGP message given a private key and its passphrase
and verifies the embedded signature.
Returns the plain data or an error on signature verification failure.
 */
FOUNDATION_EXPORT MobileExplicitVerifyMessage* _Nullable MobileDecryptExplicitVerify(CryptoPGPMessage* _Nullable pgpMessage, CryptoKeyRing* _Nullable privateKeyRing, CryptoKeyRing* _Nullable publicKeyRing, int64_t verifyTime, NSError* _Nullable* _Nullable error);

/**
 * EncryptAttachment encrypts a file given a PlainMessage and a fileName.
Returns a PGPSplitMessage containing a session key packet and symmetrically encrypted data.
Specifically designed for attachments rather than text messages.
 */
FOUNDATION_EXPORT CryptoPGPSplitMessage* _Nullable MobileEncryptAttachment(NSData* _Nullable plainData, NSString* _Nullable fileName, CryptoKeyRing* _Nullable keyRing, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT MobileBytes* _Nullable MobileNewBytes(NSData* _Nullable elements);

FOUNDATION_EXPORT CryptoSignatureVerificationError* _Nullable MobileVerifyDetached(CryptoKeyRing* _Nullable publicKeyRing, CryptoPlainMessage* _Nullable message, CryptoPGPSignature* _Nullable signature, int64_t verifyTime, NSError* _Nullable* _Nullable error);

#endif
