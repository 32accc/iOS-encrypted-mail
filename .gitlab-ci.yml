stages:
  - i18n
  - test
  - test_flight
  - enterprise_test
  - bot # comes from translations/generator job

.before_script_mac: &before_script_mac
  - cd ProtonMail/ProtonMailUITests/ && sh Tests/TestPlans/scripts/prepare_users.sh && cd .. && cd ..
  - gem install xcpretty
  - gem install xcode-install

.set_up_brew_dependecies: &set_up_brew_dependecies
  - brew bundle --file="$CI_PROJECT_DIR/ProtonMail/Brewfile" --no-upgrade

.enterprise_config_setting: &enterprise_config_setting
  - cd ProtonMail
  - touch ~/.bashrc
  - curl -sL https://sentry.io/get-cli/ | bash || true
  - base64 -D -o Certificates.p12 <<< $ENTERPRISE_DISTRIBUTION_CERTIFICATE
  - base64 -D -o Siri.mobileprovision <<< $ENTERPRISE_DISTRIBUTION_SIRI_PROVISIONPROFILE
  - base64 -D -o Enterprise.mobileprovision <<< $ENTERPRISE_DISTRIBUTION_APP_PROVISIONPROFILE
  - base64 -D -o PushService.mobileprovision <<< $ENTERPRISE_DISTRIBUTION_PUSHSERVICE_PROVISIONPROFILE
  - base64 -D -o Share.mobileprovision <<< $ENTERPRISE_DISTRIBUTION_SHARE_PROVISIONPROFILE
  - SENTRY_PROJECT=$SENTRY_PROJECT_ENTERPRISE
  - SENTRY_AUTH_TOKEN=$SENTRY_AUTH_TOKEN_ENTERPRISE
  
# --- includes ---
include:
  - project: "translations/generator"
    ref: master
    file: "/jobs/sync-crowdin.gitlab-ci.yml"

  - project: "translations/generator"
    ref: master
    file: "/jobs/commit-locales.gitlab-ci.yml"

variables:
  LC_ALL: "en_US.UTF-8"
  LANG: "en_US.UTF-8"
  GEM_HOME: "$CI_PROJECT_DIR/gem"

unit_tests:
  dependencies: []
  stage: test
  only:
    - master
    - develop
    - /^release\/.*$/
    - merge_requests
  except:
    - schedules
  before_script:
    - git config --global url."https://gitlab_deploy_token_mail:${CI_JOB_TOKEN_PMNETWORK}@gitlab.protontech.ch/apple/shared/pmnetworking".insteadOf git@gitlab.protontech.ch:apple/shared/pmnetworking
    - git config --global url."https://gitlab_deploy_token_mail:${CI_JOB_TOKEN_PMNETWORK}@gitlab.protontech.ch/apple/shared/pmauthentication".insteadOf git@gitlab.protontech.ch:apple/shared/pmauthentication
    - git submodule init
    - git submodule update --init --recursive
    # - pip install xUnique
  script:
    - defaults write com.apple.iphonesimulator ConnectHardwareKeyboard 0 # Fixed UI tests failing on secure field
    - cd ProtonMail
    - bundle install
    - bundle exec fastlane unit_test
  tags:
    - iOS_ARM_TAIPEI

ui_tests:
  dependencies: []
  stage: test
  except:
    - schedules
  only:
    - master
    - develop
    - /^release\/.*$/
    - merge_requests
  artifacts:
    when: always
    name: "test-report"
    paths:
      - ./index.html
      - ./TestResults/report.junit
      - ./TestResults.xcresult
    expire_in: 20 days
    reports:
      junit: ./TestResults/report.junit
  before_script:
    - *before_script_mac
    - git config --global url."https://gitlab_deploy_token_mail:${CI_JOB_TOKEN_PMNETWORK}@gitlab.protontech.ch/apple/shared/pmnetworking".insteadOf git@gitlab.protontech.ch:apple/shared/pmnetworking
    - git config --global url."https://gitlab_deploy_token_mail:${CI_JOB_TOKEN_PMNETWORK}@gitlab.protontech.ch/apple/shared/pmauthentication".insteadOf git@gitlab.protontech.ch:apple/shared/pmauthentication
    - git submodule init
    - git submodule update --init --recursive
  script:
    - defaults write com.apple.iphonesimulator ConnectHardwareKeyboard -bool NO # Fixed UI tests failing on secure field
    - cd ProtonMail
    - bundle install
    - bundle exec fastlane ui_test
  tags:
    - iOS_ARM_TAIPEI
    
feature_tests:
  dependencies: []
  stage: test
  rules:
    - if: '$TEST_TYPE == "regression" || $TEST_TYPE == "feature"'
  artifacts:
    when: always
    name: "test-report"
    paths:
      - ./index.html
      - ./TestResults/report.junit
      - ./TestResults.xcresult
    expire_in: 20 days
    reports:
      junit: ./TestResults/report.junit
  before_script:
    - *before_script_mac
    - git config --global url."https://gitlab_deploy_token_mail:${CI_JOB_TOKEN_PMNETWORK}@gitlab.protontech.ch/apple/shared/pmnetworking".insteadOf git@gitlab.protontech.ch:apple/shared/pmnetworking
    - git config --global url."https://gitlab_deploy_token_mail:${CI_JOB_TOKEN_PMNETWORK}@gitlab.protontech.ch/apple/shared/pmauthentication".insteadOf git@gitlab.protontech.ch:apple/shared/pmauthentication
    - git submodule init
    - git submodule update --init --recursive
    - bash <(curl -s https://raw.githubusercontent.com/TitouanVanBelle/XCTestHTMLReport/master/install.sh) '2.0.0'
  script:
    - defaults write com.apple.iphonesimulator ConnectHardwareKeyboard -bool NO # Fixed UI tests failing on secure field
    - sh ProtonMail/ProtonMailUITests/Tests/TestPlans/scripts/run_ui_tests.sh $TEST_PLAN $NUMBER_OF_DEVICES $CI_COMMIT_BRANCH $CI_JOB_URL $SLACK_UI_TESTS_URL
  after_script:
    - xchtmlreport -r ./TestResults -j
  tags:
    - iOS_ARM_TAIPEI

# --- Build app and send to testflight
build-app-and-upload:
  dependencies: []
  stage: test_flight
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule"'
      when: manual
      allow_failure: true
  artifacts:
    name: "iOS mail app builds"
    paths:
      - ./ProtonMail/outputs/ProtonMail.app.dSYM.zip
    expire_in: 90 days
  before_script:
    - git config --global url."https://gitlab_deploy_token_mail:${CI_JOB_TOKEN_PMNETWORK}@gitlab.protontech.ch/apple/shared/pmnetworking".insteadOf git@gitlab.protontech.ch:apple/shared/pmnetworking
    - git config --global url."https://gitlab_deploy_token_mail:${CI_JOB_TOKEN_PMNETWORK}@gitlab.protontech.ch/apple/shared/pmauthentication".insteadOf git@gitlab.protontech.ch:apple/shared/pmauthentication
    - git submodule init
    - git submodule update --init --recursive
  script:
    - cd ProtonMail
    - touch ~/.bashrc
    - curl -sL https://sentry.io/get-cli/ | bash || true
    - base64 -D -o Certificates.p12 <<< $DISTRIBUTION_CERTIFICATE
    - fastlane ios build
  tags:
    - iOS_ARM_TAIPEI

nightly-build-and-upload:
  dependencies: []
  stage: test_flight
  only:
    refs:
      - schedules
    variables:
      - $SCHEDULE_TYPE == "nightly_build"
  artifacts:
    name: "iOS mail app nightly build on develop branch"
    paths:
      - ./ProtonMail/outputs/ProtonMail.app.dSYM.zip
    expire_in: 90 days
  before_script:
    - git config --global url."https://gitlab_deploy_token_mail:${CI_JOB_TOKEN_PMNETWORK}@gitlab.protontech.ch/apple/shared/pmnetworking".insteadOf git@gitlab.protontech.ch:apple/shared/pmnetworking
    - git config --global url."https://gitlab_deploy_token_mail:${CI_JOB_TOKEN_PMNETWORK}@gitlab.protontech.ch/apple/shared/pmauthentication".insteadOf git@gitlab.protontech.ch:apple/shared/pmauthentication
    - git submodule init
    - git submodule update --init --recursive
  script:
    - cd ProtonMail
    - touch ~/.bashrc
    - curl -sL https://sentry.io/get-cli/ | bash || true
    - base64 -D -o Certificates.p12 <<< $DISTRIBUTION_CERTIFICATE
    - fastlane ios build
  tags:
    - iOS_ARM_TAIPEI

# --- Build enterprise app for test and upload
build-test-enterprise-app-and-upload:
  dependencies: []
  stage: enterprise_test
  when: manual
  variables:
    GIT_DEPTH: 1
  artifacts:
    name: "iOS mail app test enterprise build"
    paths:
      - ./ProtonMail/outputs/ProtonMail.app.dSYM.zip
    expire_in: 90 days
  before_script:
    - git config --global url."https://gitlab_deploy_token_mail:${CI_JOB_TOKEN_PMNETWORK}@gitlab.protontech.ch/apple/shared/pmnetworking".insteadOf git@gitlab.protontech.ch:apple/shared/pmnetworking
    - git config --global url."https://gitlab_deploy_token_mail:${CI_JOB_TOKEN_PMNETWORK}@gitlab.protontech.ch/apple/shared/pmauthentication".insteadOf git@gitlab.protontech.ch:apple/shared/pmauthentication
    - git submodule init
    - git submodule update --init --recursive
    - *set_up_brew_dependecies
  script:
    - *enterprise_config_setting
    - fastlane ios enterprise usingTimeStamp:true
  tags:
    - iOS_ARM_TAIPEI

# --- Translation related tasks ---
i18n-sync-crowdin:
  variables:
    I18N_SYNC_CROWDIN_PROJECT: "apple-mail"
    I18N_COMMIT_BRANCH_PUSH: $CI_COMMIT_REF_NAME
  extends: .i18n-sync-crowdin-shared-apple
  only:
    refs:
      - branches
    variables:
      - $CI_COMMIT_REF_NAME =~ /^feat\/V3/

i18n-commit-locales:
  variables:
    I18N_COMMIT_CROWDIN_PROJECT: "apple-mail"
    I18N_COMMIT_BRANCH_ALLOWED: $CI_COMMIT_REF_NAME
  extends: .i18n-commit-locales-shared-apple2
  when: manual
  only:
    refs:
      - branches
    variables:
      - $CI_COMMIT_REF_NAME =~ /^feat\/V3/

commit-locales-release:
  stage: i18n
  extends: .i18n-commit-locales-shared-apple2
  when: manual
  variables:
    I18N_COMMIT_BRANCH_PUSH: $CI_COMMIT_REF_NAME
    I18N_COMMIT_CROWDIN_PROJECT: "apple-mail"
  only:
    refs:
      - branches
    variables:
      - $CI_COMMIT_REF_NAME =~ /^feat\/V3/
